name: build

on:
  pull_request:
    types: [opened, synchronize]
  merge_group:
    types: [checks_requested]

jobs:
  tests:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: 1.22.x

      - name: Pull external libraries
        run: make vendor

      - name: Run tests
        run: make test

      - name: Publish test coverage
        uses: codecov/codecov-action@v4
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}

  fmt:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: 1.22.x

          # No need to download cached dependencies when running gofmt.
          cache: false

      - name: Run gofmt
        run: |
          # -l: list files that were reformatted
          # -w: write back formatted files to disk
          gofmt -l -w ./

      - name: Fail on differences
        run: |
          # Exit with status code 1 if there are differences (i.e. unformatted files)
          git diff --exit-code

  commit-message:
    runs-on: ubuntu-latest
    if: ${{ github.event_name == 'pull_request' }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Validate Tag
        run: |
          TAG=$(echo ${{ github.event.pull_request.title }} | sed -ne 's/\[\(.*\)\].*/\1/p')
          echo "Found tag {$TAG}"
          # The status code for grep will be 1 if no match, and 0 if a match.
          # Store in variable to hide the actual grep result from the console output.
          MATCH=$(cat .codegen/changelog_config.yml | grep "tag: \"\[$(echo $TAG)\]\"")

      - name: Log failure
        if: failure()
        run: |
          echo "Invalid or missing tag in commit message"
          exit 1